'use strict';

angular.module('research').controller('ResearchModalController', [
	'$scope',
	'ResearchService',
	'metadata',
	'query',
	'Listing',
	'Conversations',
	'Reservations',
	'$timeout',
	function($scope, ResearchService, metadata, query, Listing, Conversations, Reservations, $timeout) {
		// Research modal controller logic

		// check if child-object has an Id, and put its Id on the parent-object
		function extractIdFromObject(obj, key) {
			if(obj[key]) obj[key + 'Id'] = obj[key]._id;
		}

		function extendConversation(data) {
			openContentPanel();
			$scope.conversation = data;
			$scope.selectedConversationId = $scope.conversation._id;
		}

		function getConversationData(conversation) {
			if(conversation.thread) 		return extendConversation(conversation);
			if(conversation.conversationId)	return Conversations.get({conversationId: conversation.conversationId}, extendConversation);
			if(conversation.reservationId)	return Reservations.get({reservationId: conversation.reservationId}, extendConversation);
			// TODO: get reservation by reservation id!
			//if(conversation.reservationId)		return TicketsService.getTransactionByReservationId(conversation.reservationId).then(extendConversation);
		}

		function clearScopeVariables() {
			$scope.research = null;
			$scope.closeContentPanel();
		}

		function openContentPanel() {
			$scope.isContentPanelShown = true;
		}

		function loadListings(accountId) {
            $scope.listings = Listing.query({ accountId: accountId });
		}

		function getResearchQuery() {
			return {
				listingId: $scope.metadata.listingId,
				accountId: $scope.metadata.accountId,
				reservationId: $scope.metadata.reservationId,
				conversationId: $scope.metadata.conversationId,
				query: $scope.query
			};
		}

		// subscribe to wanting to watch a conversation
		$scope.$on('research:view:conversation', function(event, conversation) {
			$scope.closeContentPanel();
			$timeout(function() {
				getConversationData(conversation);
			});
		});

		// public

		// represent the search-query-string
		$scope.query = query || null;

		// the metadata for this research
		$scope.metadata = _.pick(metadata, ['reservationId', 'reservationId', 'conversationId', 'listingId', 'listing', 'accountId', 'account']);

		$scope.init = function () {
			extractIdFromObject($scope.metadata, 'listing');
			extractIdFromObject($scope.metadata, 'account');
			loadListings($scope.metadata.accountId);

			// if query defined to modal-service - start the search right at the init
			if(query) $scope.submitSearch();
		};

		// submits the research
		$scope.submitSearch = function() {
			clearScopeVariables();
			ResearchService.get(getResearchQuery(), function(research){
				$scope.research = research;
			});
		};

		$scope.closeContentPanel = function() {
			$scope.isContentPanelShown = false;
			$scope.conversation = null;
			$scope.selectedConversationId = null;
		};
	}
]);
