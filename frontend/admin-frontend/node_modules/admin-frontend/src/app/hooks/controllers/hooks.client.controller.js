'use strict';

// Hooks controller
angular.module('hooks').controller('HooksController', [
    '$scope',
    '$uibModal',
    'Hooks',
    'Templates',
    'Accounts',
    'Listing',
    'CommonService',
    'notify',
    '$state',
    '$stateParams',
    function($scope, $uibModal, Hooks, Templates, Accounts, Listing, CommonService, notify, $state, $stateParams) {
        function queryParams() {
            var obj = {};

            if ($scope.account || $stateParams.accountId) {
                obj.accountId = _.get($scope, 'account._id') || $stateParams.accountId;
            }

            if ($scope.listing) {
                obj.listingId = $scope.listing._id;
                if(!obj.accountId) obj.accountId = $scope.listing.accountId;
                if(!$scope.account) $scope.account = {_id: obj.accountId};
            }

            if (!$scope.account && !$scope.listing){
                return notify({
                    message: 'Error',
                    classes: 'alert-danger'
                });
            }

            return obj;
        }

        $scope.openModal = function(hook) {
            var account = $scope.account;
            var listing = $scope.listing;

            Templates.tree(queryParams(), function(templates){
                $uibModal.open({
                    controller: 'HookModalController as hc',
                    templateUrl: 'app/hooks/views/create-hook.modal.client.view.html',
                    windowClass: 'hooks-modal',
                    size: 'lg',
                    resolve: {
                        formData: function() {
                            return {
                                hook: hook,
                                templates: templates,
                                account: account,
                                listing: listing
                            };
                        }
                    }
                }).result.then(function() {
                    $scope.find();
                });
            });
        };

        $scope.find = function() {
            $scope.hooks = [];
            $scope.inheritedHooks = [];

            async.parallel({
                ignoredUser: function(done){
                    if (!$scope.account) return done();
                    Accounts.get({accountId: $scope.account._id, fields: 'ignoredHooks'}, function(account){
                        done(null, account.ignoredHooks);
                    }, done);
                },
                ignoredListing: function(done){
                    if (!$scope.listing) return done();
                    Listing.get({listingId: $scope.listing._id, fields: 'ignoredHooks'}, function(listing){
                        done(null, listing.ignoredHooks);
                    }, done);
                },
                hooks: function(done){
                    Hooks.query(queryParams(), function(hooks) {
                        done(null, hooks);
                    }, done);
                }
            }, function(err, results){
                if (err){
                    return notify({
                        message: 'Failed to load hooks',
                        classes: 'alert-danger'
                    });
                }
                if ($scope.listing){
                    _.each(results.hooks, function(hook){
                        if (hook.listingIds && hook.listingIds.length){
                            $scope.hooks.push(hook);
                        } else {
                            hook.inherited = true;
                            if (results.ignoredUser && results.ignoredUser.indexOf(hook._id) !== -1) hook.enabled = false;
                            if (results.ignoredListing && results.ignoredListing.indexOf(hook._id) !== -1) hook.enabled = false;
                            $scope.inheritedHooks.push(hook);
                        }
                    });
                } else {
                    $scope.hooks = results.hooks;
                }
            });
        };

        $scope.remove = function(hook) {
            CommonService.confirm().then(function() {
                hook.$remove(function() {
                    notify({
                        message: 'Hook removed successfully',
                        classes: 'alert-success'
                    });
                    $scope.find();
                }, function() {
                    notify({
                        message: 'Failed to remove hook',
                        classes: 'alert-danger'
                    });
                });
            });
        };

        $scope.updateStatus = function(hook){
            if (hook.inherited) {
                var body = {enabled: hook.enabled};
                if ($scope.listing) body.listingId = $scope.listing._id;
                else if ($scope.account) body.accountId = $scope.account._id;

                Hooks.updateInheritance({hookId: hook._id}, body, function(){
                    notify({
                        message: 'Saved successfully',
                        classes: 'alert-success'
                    });
                }, function(){
                    hook.enabled = !hook.enabled;
                    notify({
                        message: 'Error',
                        classes: 'alert-danger'
                    });
                });
            } else {
                hook.$update();
            }
        };

        $scope.show = function(hook){
	        hook.shown = !hook.shown;
	    };

        $scope.edit = function(hook){
            $scope.openModal(hook);
	    };

        $scope.getFiltersTooltip = function(hook){
            if (!hook || !hook.filters) return '';
            return _.map(hook.filters, function(filter){
                if (!filter) return;
                return [filter.name, filter.by, filter.value].join(' ');
	        }).join('\n');
	    };

        $scope.goToTemplates = function(){
            if ($scope.listing || $stateParams.listingId) {
                $state.go('listing.templates', {listingId: _.get($scope, 'listing._id') || $stateParams.listingId});
            } else if ($scope.account || $stateParams.accountId) {
                $state.go('account.templates', {accountId: _.get($scope, 'account._id') || $stateParams.accountId});
            }
        };
    }
]);
