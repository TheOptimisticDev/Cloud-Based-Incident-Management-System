'use strict';

angular.module('employees').controller('AuthenticationController', [
    '$scope',
	'$rootScope',
    '$http',
    '$location',
    'Authentication',
    'TeamUpdates',
    'Employees',
    'Events',
	function($scope, $rootScope, $http, $location, Authentication, TeamUpdates, Employees, Events) {

		// If user is signed in then redirect back home
		$scope.login = function(frm) {

            Authentication.login($scope.credentials.username, $scope.credentials.password).then(function(){
                Employees.me(function(me){
                    // If successful we assign the response to the global user model
                    $scope.core.employee = me;
					$rootScope.employee = me; // Some controllers use the rootscope to determine employee .. shame.
					Authentication.setEmployee(me);



					Events.emit('employee.loggedIn', me);
                    // And redirect to the index page
                    $location.path('/');


                    //deprecated- todo
                    //Check if any team updates
                    TeamUpdates.popup('loggedIn');

                });

            }, function(response){
				$scope.error = response.message;
                frm.$setPristine();
			});
		};
	}
]);
