/* global google, MarkerClusterer */
'use strict';

// Listing controller
angular.module('listings').controller('accountPreferencesCtrl', accountPreferencesCtrl);

function accountPreferencesCtrl(Enums, PlanTypeNameHumanizer){
	var self = this;
	self.init = init;
	self.humanizePlanTypeEnum = humanizePlanTypeEnum;
	self.humanizeValue = humanizeValue;
	self.humanizeName = humanizeName;

	// TODO: Test this when I get data from server
	self.planData = _.cloneDeep(self.planData);


	// //////////////////////

	function init(){
		function setDisplayStatus(){
			var safePlanData = self.planData || [];
			self.shouldDisplay = safePlanData.reduce(function(result, curr){
				for(var prop in curr){
					if(curr[prop] === ''){
						result = false;
					}
				}
				return result;
			}, true);
		}

		setDisplayStatus();
	}

	function humanizePlanTypeEnum(str){
		return PlanTypeNameHumanizer.humanize('PLAN', str);
	}

	function humanizeValue(item){
		var stringBuffer = item.value;
		var PLAN_TYPES = Enums.PLAN_TYPES;

		switch(item.planType){
			case (PLAN_TYPES.LISTING_MONTHLY):
			case (PLAN_TYPES.ACCOUNT_MONTHLY):
				stringBuffer = '$' + stringBuffer;
				break;
			case (PLAN_TYPES.TRANSACTION_COMMISSION):
			case (PLAN_TYPES.RESERVATION_COMMISSION):
			default:
				stringBuffer = stringBuffer + '%';
				break;
		}
		var typePostfix = humanizePlanTypeEnum(item.planType);
		return stringBuffer + ' ' + typePostfix;
	}

	function humanizeName(value){
		return PlanTypeNameHumanizer.humanize('NAME', value);
	}
}
