/* global _, moment */
'use strict';

// Shift List controller
angular.module('admin').controller('ShiftsListController', [
    '$scope',
    'Shifts',
    'notify',
    '$rootScope',
    function($scope, Shifts, notify, $rootScope) {

        $scope.selectedShift = null;
        $scope.today = moment();
        $scope.currentDate = moment();
        $scope.canEditShifts = false;

        $scope.init = init;

        ////////////////////


        function init(){


			$rootScope.employee.$promise.then(function(){
				$scope.canEditShifts = _.intersection($rootScope.employee.roles, ['admin']).length>0;
			});

            // if ($rootScope.employee.$resolved){
            //     $scope.canEditShifts = _.intersection($rootScope.employee.roles, ['admin']).length>0;
            // } else {
            //     $rootScope.employee.$promise.then(function(){
            //         $scope.canEditShifts = _.intersection($rootScope.employee.roles, ['admin']).length>0;
            //     });
            // }
        }

        /**
         * Calculate total time in shifts
         */
        function totalTime(shifts) {
            var total = 0;
            _.each(shifts, function(shift) {
                total += moment(shift.checkOut) - moment(shift.checkIn);
            });
            return total;
        }

        $scope.shiftTime = function (shift){
            return moment(shift.checkOut) - moment(shift.checkIn);
        };

        /**
         * Load next month's data
         */
        $scope.nextMonth = function() {
            $scope.currentDate.add(1, 'month');
            $scope.loadMonth();
        };

        /**
         * Load previous month's data
         */
        $scope.previousMonth = function() {
            $scope.currentDate.subtract(1, 'month');
            $scope.loadMonth();
        };

        /**
         * Loads shifts in a calendar's month
         */
        $scope.loadMonth = function() {
            var start = moment($scope.currentDate).startOf('month').format('DD/MM/YYYY');
            var end = moment($scope.currentDate).endOf('month').format('DD/MM/YYYY');

            $scope.employees = Shifts.timetable({
                start: start,
                end: end
            }, function onSuccess() {
                _.each($scope.employees, function(employee) {
                    employee.totalShiftsTime = totalTime(employee.shifts);
                });
            }, function onFailure(error) {
                notify({
                    message: 'Could not load data. ERR: ' + error.data,
                    classes: 'alert-danger'
                });
            });
        };

        /**
         * Get CSS class for shift element
         */
        $scope.classForShift = function(shift) {
            var shiftTime = moment(shift.checkOut) - moment(shift.checkIn);

            var hour = 60 * 60 * 1000;

            if (shiftTime < 6 * hour) return 'label-info';
            else if (shiftTime < 8 * hour && shiftTime > 6 * hour) return 'label-warning';
            else return 'label-danger';
        };

        /**
         * Select specific shift
         */
        $scope.selectShift = function(shift, employee) {
            if (!$scope.canEditShifts) return;

            $scope.selectedShift = {
                shift: shift,
                employee: employee,
                edit: {
                    checkIn: angular.copy(shift.checkIn),
                    checkOut: angular.copy(shift.checkOut)
                }
            };
        };

        /**
         * Update of the selected shift
         */
        $scope.updateShift = function() {
            _.extend($scope.selectedShift.employee, _.pick($scope.selectedShift, ['shift', 'edit']));

            // preventing of loading the whole 'hours' array of the user, be keeping current array
            var prevHours = $scope.selectedShift.employee.shifts;

            $scope.selectedShift.employee.$update(function() {
                // after the update, the employee now has the whole 'hours' array of all times.
                // now it will return having only relevant shifts of the current day
                $scope.selectedShift.employee.shifts = prevHours;

                // saving the updated times to to updated-shift object
                $scope.selectedShift.shift.checkIn = $scope.selectedShift.edit.checkIn;
                $scope.selectedShift.shift.checkOut = $scope.selectedShift.edit.checkOut;

                // calculate the total shift time again
                $scope.selectedShift.employee.totalShiftsTime = totalTime($scope.selectedShift.employee.shifts);

                notify({
                    message: 'Shift updated successfully',
                    classes: 'alert-success'
                });
            });
        };

        /**
         * Delete of the selected shift
         */
        $scope.deleteShift = function() {
            // preventing of loading the whole 'hours' array of the user, be keeping current array
            var prevHours = $scope.selectedShift.employee.shifts;

            $scope.selectedShift.employee.$delete($scope.selectedShift.shift, function() {
                // after the update, the employee now has the whole 'hours' array of all times.
                // now it will return having only relevant shifts of the current day
                $scope.selectedShift.employee.shifts = prevHours;

                // remove the deleted shift from 'hours' array
                $scope.selectedShift.employee.shifts = _.filter($scope.selectedShift.employee.shifts, function(shift) {
                    return shift !== $scope.selectedShift.shift;
                });

                // calculate the total shift time again
                $scope.selectedShift.employee.totalShiftsTime = totalTime($scope.selectedShift.employee.shifts);

                $scope.selectedShift = null;
                notify({
                    message: 'Shift deleted successfully',
                    classes: 'alert-success'
                });
            });
        };

        $scope.loadMonth();
    }
]);
