/* global _, moment */
'use strict';

// Shift List controller
angular.module('admin').controller('EmployeeController', [
    'Employees',
    'EmployeesShifts',
    '$stateParams',
    'gNotify',
    function(Employee, EmployeesShifts, $stateParams, gNotify) {

        var self = this;

        self.availableRoles = [
            'receptionist',
            'admin',
            'sales',
            'support',
            'receptionists-reviewer',
            'receptionists-ticket-assigner',
            'post-booking',
            'system-manager',
            'shift-manager',
            'shifts-viewer',
    				'account-manager'

				];

        self.init = function(){
            if ($stateParams.employeeId === 'new'){
                self.employee = new Employee({
                    password: Math.random().toString(36).slice(2),
                    roles: [],
                    $resolved: true,
                    isActive: true
                });
            } else {
                self.employee = Employee.get({employeeId: $stateParams.employeeId}, function(){
                    if (self.employee.isInShift){
                        self.currentShift = EmployeesShifts.currentShift({employeeId: $stateParams.employeeId});
                    }
                });
            }
        };

        self.save = function(frm){
            var method = self.employee._id ? '$update': '$save';
            self.employee[method](function(){
                gNotify.success('saved successfully');
                frm.$setPristine();
            }, function(err){
                gNotify.error('failed to save: ' + err);
                frm.$setDirty();
            });
        };

        self.deactivateUser = function(frm){
            self.employee.isActive = false;
            self.save(frm);
        };

        self.reactivateUser = function(frm){
            self.employee.isActive = true;
            self.save(frm);
        };

        self.toggleRole = function(role, frm){
            if (self.employee.roles.indexOf(role)>-1){
                _.pull(self.employee.roles, role);
            } else {
                self.employee.roles.push(role);
            }
            frm.$setDirty();
        };

        self.checkOut = function(){
            //todo
        };


    }
]);
