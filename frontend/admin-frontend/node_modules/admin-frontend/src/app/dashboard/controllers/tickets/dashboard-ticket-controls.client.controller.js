'use strict';

// Dashboard ticket controls controller
angular.module('dashboard').controller('DashboardTicketControlsController', [
	'$scope',
	'$rootScope',
	'$state',
	'Authentication',
	'CommonService',
	'notify',
	'$timeout',
	'$uibModal',
	'InboxModals',
	'$window',
	'Dashboard',
	'Reservations',
	'Events',
	function($scope, $rootScope, $state, Authentication, CommonService, notify, $timeout, $uibModal, InboxModals, $window, Dashboard, Reservations, Events){

		$scope.authentication = Authentication;

		$scope.locationHost = $window.location.host;

		// Just for clarity, 0 is the best rating
		$scope.goodScore = 0;

		// name : what will appear on the button
		$scope.ticketScoreTypes = [
			{
				text: 'Minor mistake',
				backgroundColor: "yellow-bkgrnd",
				score: 1
			},
			{
				text: 'Mistake',
				backgroundColor: "orange-bkgrnd",
				score: 2
			},
			{
				text: 'Huge mistake',
				backgroundColor: "red-bkgrnd",
				score: 3
			},
		];


		// Ticket QA Functions, see bottom
		$scope.ticketHasErrors = ticketHasErrors;
		$scope.ticketWasGood = ticketWasGood;
		$scope.lastReviewObject = _.get($scope.ticket, 'qaReview') ? $scope.ticket.qaReview[$scope.ticket.qaReview.length - 1] : '';
		if ($scope.lastReviewObject) {
			$scope.lastTicketReview = moment($scope.lastReviewObject.at).format('MMMM Do YYYY, h:mm:ss a');
		}

		// Expose update method to child controllers so QA review buttons will be able to post and update a ticket, otherwise emit to parent controller an error
		$scope.updateTicket = ($scope.save) ? $scope.save : $scope.$emit('qareview.error');
		$scope.inQaMode = ($scope.viewMode === 'QA');


		function snoozeForLater(selectedSnooze){
			var snoozeTime;
			if(selectedSnooze === 'tomorrow')
				snoozeTime = moment().add(1, 'day').set('hour', 7).set('minutes', 0);
			else
				snoozeTime = moment().add(selectedSnooze, 'minutes');

			$scope.snoozeTicket($scope.ticket, snoozeTime.toDate(), function(){
				/*todo: Analytics.track('Ticket - Snoozed', _.extend({},
				 $scope.ticket.toJSON(),
				 {
				 snoozeMinutes: selectedSnooze,
				 snoozeHours: selectedSnooze !== 'tomorrow' ? selectedSnooze/60 : selectedSnooze
				 }
				 ));*/
				notify({
					message: 'Ticket\'s snoozed successfully',
					classes: 'alert-success'
				});
			});
		}

		function getRandomBlessing(){
			var blessing = [
				'Be Kind',
				'Accuracy is key'
			];
			var index = Math.floor(Math.random() * blessing.length);
			return blessing[index];
		}

		function completeTicket(){
			var ticket = $scope.ticket;
			$scope.ticketHasDone = true;
			$scope.serviceBlessing = getRandomBlessing();
			ticket.deleted = true;
			timeouts[ticket._id] = $timeout(function(){
				$scope.doneTicket(ticket);
				delete timeouts[ticket._id];
			}, 1750);
		}

		/* Snooze */
		$scope.snoozingOptions = [10, 20, 30, 60, 120, 180, 240, 300, 480, 600, 720, 1080, 1440, 2880];

		$scope.snooze = function(selectedSnooze){
			$uibModal.open({
				windowClass: 'snooze-modal',
				templateUrl: 'app/dashboard/views/modals/snooze.modal.client.view.html',
				controller: function($scope, $uibModalInstance){
					$scope.save = function(){
						snoozeForLater(selectedSnooze);
						Reservations.log({ reservationId: $scope.reservationId }, {
							event: 'Snoozed ticket',
							description: $scope.message
						});
						if($scope.reservationId){
							Reservations.log({ reservationId: $scope.reservationId }, {
								event: 'Snoozed ticket for ' + (selectedSnooze > 60 ? selectedSnooze / 60 + ' Hours' : selectedSnooze + ' Minutes'),
								description: $scope.message
							});
						}
						$uibModalInstance.dismiss();
					};

					$scope.cancel = function(){
						$uibModalInstance.dismiss();
					};
				}
			});
		};
		/* end snooze */

		var timeouts = {};

		$scope.$on('ticket.ok', function(){
			if($scope.ticket.hasConversations && !$scope.ticket.repliedToConversation){
				CommonService.confirm('Are you sure you want to proceed?',
					'Please verify that an answer was sent.').then(completeTicket);
			}else{
				completeTicket();
			}
		});

		$scope.done = function(){
			$rootScope.$broadcast('tabs.done');
		};

		$scope.undo = function(){
			var ticket = $scope.ticket;
			delete $scope.ticketHasDone;
			delete ticket.deleted;
			if(timeouts[ticket._id]){
				$timeout.cancel(timeouts[ticket._id]);
				delete timeouts[ticket._id];
			}
		};

		$scope.share = function(){
			$uibModal.open({
				windowClass: 'share-modal',
				templateUrl: 'app/dashboard/views/modals/share.modal.client.view.html',
				controller: 'ShareController',
				resolve: {
					formData: function(){
						return {
							ticket: $scope.ticket
						};
					}
				}
			});
		};

		function ticketHasErrors() {
			InboxModals.openBadTicketReviewModal($scope.ticket).then(function afterPassingSucceeded(){
				$state.go('admin.dashboard-tickets');
			});
		}

		function ticketWasGood() {
			InboxModals.openGoodTicketReviewModal($scope.ticket).then(function afterPassingSucceeded(){
				$state.go('admin.dashboard-tickets');
			});
		}
	}
]);
