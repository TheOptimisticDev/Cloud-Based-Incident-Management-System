'use strict';

// Dashboard controller
angular.module('dashboard').controller('DashboardReservationBoxController', [
    '$scope',
    '$uibModal',
    'ReservationRequests',
    'Reservations',
    'CommonService',
    'gNotify',
    'ReservationsMetaInformation',
	function($scope, $uibModal, ReservationRequests, Reservations, CommonService, gNotify, ReservationsMetaInformation) {

        var self = this;

        self.init = function(){
            if (!$scope.reservation || !$scope.reservation._id) return;
            if (self.reservation && $scope.reservation._id === self.reservation._id) return;
            self.hasError = false;

            self.reservation = Reservations.get({reservationId: $scope.reservation._id}, function(reservation) {
                _.extend(self.reservation, ReservationsMetaInformation.get(reservation));

                $scope.isInquiry = ['inquiry', 'declined', 'expired'].indexOf(reservation.status) !== -1;
                $scope.isRequest = reservation.status === 'reserved';

                var checkIn = moment(reservation.checkIn);
                var checkOut = moment(reservation.checkOut);
                var now = new Date();
                self.reservationTime = checkIn.isAfter(now) ? 'upcoming' : checkIn.isBefore(now) && checkOut.isAfter(now) ? 'currently-hosting' : 'past';
            }, function(){
                self.hasError = true;
            });
        };

        $scope.$watch('reservation._id', self.init);


		self.openReservationModal = function() {
            $uibModal.open({
				windowClass: 'dashboard-reservation-modal modal-padded',
				templateUrl: 'app/reservations/views/reservation/reservation.client.view.html',
				size: 'lg',
				controller: function($scope) {
					$scope.reservationId = self.reservation._id;
				}
			});
		};

		var reservationRequestApprovalState = function(state) {
			if (self.reservation.status !== 'reserved') return gNotify.alert('error. let koby know.');

            Reservations.approval({
                reservationId: self.reservation._id
                },{
                state: state
            }, function() {
                gNotify.success('Added to queue successfully');

                Reservations.log({ reservationId: self.reservation._id }, {
                    event: state ? 'Set to approve request' : 'Set to decline request'
                });

                if (state) {
                    self.reservation.approveState = true;
                } else {
                    self.reservation.declineState = true;
                }
            }, function(err) {
                var message = err.data || err;

                var notificationText = '<span>Could not ' + (state ? 'approve' : 'decline') + ' reservation request.' +
                    (message ? ('<br>' + 'Reason: ' + message) : '') + '</span>';
                gNotify.notify({
                    messageTemplate: notificationText,
                    classes: 'alert-danger'
                });
            });
		};

		self.approveReservationRequest = function() {
            if (!$scope.reservation.preBookingChecklistCompleted){
                CommonService.confirm('Pre booking checklist is not complete!', 'Are you sure?').then(function () {
                    reservationRequestApprovalState(true);
                });
            } else {
                CommonService.confirm('Are you sure?').then(function() {
                    reservationRequestApprovalState(true);
                });
            }
		};

		self.declineReservationRequest = function() {
            CommonService.confirm('Are you sure?').then(function() {
                reservationRequestApprovalState(false);
            });
		};

        self.preApprove = function() {
            var cb = function(){
                CommonService.confirm((self.reservation.preApproveState ? 'Cancel ' : '') + 'Pre Approve?', 'Are you sure?').then(function () {
                    Reservations.preApprove({
                        reservationId: self.reservation._id
                    }, {
                        state: !self.reservation.preApproveState
                    }, function() {
                        self.reservation.preApproveState = !self.reservation.preApproveState;
                        gNotify.success('Added to queue successfully');

                        var event = self.reservation.preApproveState ? 'Set to pre-approve guest' : 'Set to cancel pre-approve';
                        Reservations.log({ reservationId: self.reservation._id },{
                            event: event
                        });
                    }, function() {
                        gNotify.alert('could not pre-approve');
                    });
                });
            };
            if (!$scope.reservation.preBookingChecklistCompleted){
                CommonService.confirm('Pre booking checklist is not complete!', 'Are you sure?').then(function(){
                    cb();
                });
            } else {
                cb();
            }
        };

        self.updateCheckInOrCheckOutTime = function() {
            if(!self.reservation._id) return;
            var checkTimes = {
                plannedArrival: moment(self.reservation.withTimezone.checkIn).format('hh:mma'),
                plannedDeparture: moment(self.reservation.withTimezone.checkOut).format('hh:mma')
            };
            Reservations.update({
                reservationId: self.reservation._id
            }, checkTimes, function() {
                gNotify.success('Arrival time saved successfully');
                self.reservation.withTimezone.checkInTime = checkTimes.plannedArrival;
                self.reservation.withTimezone.checkOutTime = checkTimes.plannedDeparture;
            }, function() {
                gNotify.alert('could not save arrival time');
            });
        };

        self.openSpecialOfferModal = function() {
            $uibModal.open({
                templateUrl: 'app/dashboard/views/modals/special-offer.modal.client.view.html',
                controller: 'SpecialOfferController',
                resolve: {
                    formData: function() {
                        return {
                            accountId: self.reservation.accountId,
                            reservationId: self.reservation._id,
                            listingId: self.reservation.listingId,
                            guests: self.reservation.guestsCount,
                            startDate: self.reservation.checkIn,
                            endDate: self.reservation.checkOut,
                            price: self.reservation.money.hostPayout
                        };
                    }
                }
            });
        };

        self.shouldReview = function() {
            Reservations.update({
                reservationId: self.reservation._id
            }, {
                review: self.reservation.review
            }, function() {
                gNotify.success('Ok! No review for this reservation!');
            }, function() {
                gNotify.alert('Oops! Save failed.');
            });
        };
	}
]);
