(function(){
	'use strict';

	angular.module('receptionists').factory('OnlineReceptionists', OnlineReceptionists);

	/** @ngInject **/
	function OnlineReceptionists($firebaseObject, $firebaseArray, $rootScope){

		var connectedRef = firebase.database().ref('.info/connected');
		var usersRef = firebase.database().ref('users');

		var users = $firebaseArray(usersRef);

		return {
			all: users,
			getSyncedMe: getSyncedMe,
			getMe: getMe,
			updateMe: updateMe,
			removeMe: removeMe,
			setOnline: setOnline,
			registerListeners: function(){
				$rootScope.$on('employee.loaded', onEmployeeLoaded);
				$rootScope.$on('employee.checkedIn', onCheckedIn);
				$rootScope.$on('employee.checkedOut', onCheckedOut);
				$rootScope.$on('inbox.paused', onInboxPaused);
				$rootScope.$on('inbox.started', onInboxStarted);
				$rootScope.$on('ticket.done', onTicketDone);
			}
		};

		function onEmployeeLoaded(e, employee){
			if(employee.roles && employee.roles.indexOf('receptionist') !== -1){
				setOnline();
				updateMe(_.pick(employee, ['username', 'fullName', 'picture']));
			}
		}

		function onCheckedIn(e, employee){
			if(employee.roles && employee.roles.indexOf('receptionist') !== -1){
				var me = getMe();
				if(!me || !me.online){
					updateMe(_.extend({
						inShift: true,
						startedAt: new Date()
					}, _.pick(employee, ['username', 'fullName', 'picture']))).then(function(){
						setOnline();
					});
				}else{
					updateMe({ inShift: true, startedAt: new Date() });
				}
			}
		}

		function onCheckedOut(e, employee){
			if(employee.roles && employee.roles.indexOf('receptionist') !== -1){
				removeMe();
			}
		}

		function onInboxPaused(){
			updateMe({ inPause: true });
		}

		function onInboxStarted(){
			updateMe({ inPause: false });
		}

		function onTicketDone(){
			var user = getMe();
			var tickets = user.tickets || 0;
			tickets++;
			var hoursInShift = Math.abs(moment(user.startedAt).diff(new Date(), 'hours')) || 1;
			var ticketsAvg = tickets / hoursInShift;
			if(ticketsAvg < 1) ticketsAvg = 0;
			return updateMe({
				tickets: tickets,
				ticketsAvg: ticketsAvg.toFixed(2)
			});
		}

		function getUid(){
			return $rootScope.employee._id;
		}

		function setOnline(){
			var connected = $firebaseObject(connectedRef);
			var online = $firebaseArray(usersRef.child(getUid() + '/online'));
			connected.$watch(function(){
				if(connected.$value === true){
					online.$add(true).then(function(connectedRef){
						connectedRef.onDisconnect().remove();
					});
				}
			});
		}

		function getMe(){
			return users.$getRecord(getUid());
		}

		function removeMe(){
			return usersRef.child(getUid()).remove();
		}

		function updateMe(data){
			return usersRef.child(getUid()).update(data);
		}

		function getSyncedMe(){
			return $firebaseObject(usersRef.child(getUid()));
		}
	}

})();

