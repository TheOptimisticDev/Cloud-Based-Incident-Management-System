(function(){
    'use strict';

    angular.module('core').factory('Analytics', Analytics);

    /** @ngInject **/
    function Analytics($rootScope) {
        var service = {
            registerListeners: registerListeners
        };

        var events = {
            'employee.loggedIn': employeeLoggedIn,
            'employee.loggedOut': employeeLoggedOut,
            'employee.loaded': employeeLoaded,
            'employee.checkedIn': employeeCheckedIn,
            'employee.checkedOut': employeeCheckedOut,

            'inbox.started': inboxStarted,
            'inbox.paused': inboxPaused,
            'ticket.viewed': ticketViewed,
            'ticket.completed': ticketDone,
            'ticket.snoozed': ticketSnoozed
        };

        return service;

        /////

        function registerListeners(){
            _.forEach(events, function(func, event){
                $rootScope.$on(event, func);
            });
        }

        function employeeLoggedIn(e, employee){
            analytics.identify(employee._id, {
                name: employee.username
            });
            analytics.track('Receptionist - Logged in');
        }

        function employeeLoggedOut(e, employee){
            analytics.track('Receptionist - Logged out');
        }

        function employeeLoaded(e, employee){
            analytics.identify(employee._id, {
                name: employee.username
            });
            analytics.page();
        }

        function employeeCheckedIn(){
            analytics.track('Receptionist - Checked in');
        }

        function employeeCheckedOut(e, shift){
            var data = '';
            if (shift){
                data = _.clone(shift.toJSON ? shift.toJSON() : shift);
                var checkout = moment(data.checkOut);
                var shiftTimeMinutes = checkout.diff(data.checkIn, 'minutes', true);
                var shiftTimeHours = checkout.diff(data.checkIn, 'hours', true);
                _.extend(data, data.stats, {
                    workingHours: shiftTimeHours,
                    workingMinutes: shiftTimeMinutes,
                    ticketsPerHour: data.stats && data.stats.tickets && shiftTimeHours ? data.stats.tickets / shiftTimeHours : 0,
                    pauses: data.pauses ? data.pauses.length : 0
                });
                if(shiftTimeHours < 0.5) {
                    console.log('checkout without reasonable working hours');
                }
            }
            analytics.track('Receptionist - Checked out', data);
        }

        ////////////////////////

        function inboxStarted(){
            analytics.track('Inbox - Started');
        }

        function inboxPaused(){
            analytics.track('Inbox - Paused');
        }

        /////////////////////////////

        function ticketViewed(e, ticket){
            analytics.track('Ticket - Viewed', ticket.toJSON ? ticket.toJSON() : ticket);
        }

        function ticketDone(e, ticket){
            analytics.track('Ticket - Done', ticket.toJSON ? ticket.toJSON() : ticket);
        }

        function ticketSnoozed(e, ticket){
            analytics.track('Ticket - Snoozed', ticket.toJSON ? ticket.toJSON() : ticket);
        }

    }

})();
