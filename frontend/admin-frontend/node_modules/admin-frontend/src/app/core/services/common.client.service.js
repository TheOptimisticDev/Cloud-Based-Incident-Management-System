/* global $ */
'use strict';

angular.module('core').factory('CommonService', ['$q', '$uibModal', 'SweetAlert',
    function($q, $uibModal, SweetAlert) {

        return {
            /**
             * create a confirm window
             * @param title
             * @param text
             * @param confirmButtonText
             * @param cancelButtonText
             * @returns {*}
             */
            confirm: function(title, text, confirmButtonText, cancelButtonText) {
                var deferred = $q.defer();

                SweetAlert.swal({
                    title: title || 'Are You Sure?',
                    text: text || '',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#DD6B55',
                    confirmButtonText: confirmButtonText || 'Yes',
                    cancelButtonText: cancelButtonText || 'Cancel',
                    closeOnConfirm: true,
                    closeOnCancel: true
                }, function(isConfirm) {
                    if (isConfirm) return deferred.resolve();
                    deferred.reject();
                });

                return deferred.promise;
            },
            /**
             * create an ask window
             * @param title
             * @param text
             * @param answer1Text
             * @param answer2Text
             * @returns {*}
             */
            ask: function(title, text, answer1Text, answer2Text) {
                var deferred = $q.defer();

                SweetAlert.swal({
                    title: title || 'Are You Sure?',
                    text: text || '',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#DD6B55',
                    confirmButtonText: answer1Text || 'Yes',
                    cancelButtonText: answer2Text || 'No',
                    closeOnConfirm: true,
                    closeOnCancel: true
                }, function(isConfirm) {
                    if (isConfirm) return deferred.resolve(1);
                    deferred.resolve(2);
                });

                return deferred.promise;
            },
            getTextFromHTML: function getTextFromHTML(el) {
                el = $(el);
                var lines = el.children('p, h1, h2, h3, h4, h5, div');
                if (!lines.length) return $('<div />').html(el.html().replace(/<br>/gi, '\n').replace(/<br\/>/gi, '\n')).text();
                return $.map(lines, function(a) {
                    return getTextFromHTML(a);
                }).join('\n');
            },
            doesReservationHaveADayInRange: function(checkIn, checkOut, start, end){
                var daysDiff = Math.ceil(moment.duration(moment(checkOut)-moment(checkIn)).asDays());
                var dates = _.times(daysDiff, function(n){
                    return moment(checkIn).add(n, 'days');
                });
                return !!_.find(dates, function(date){
                    moment(date).isBetween(start, end);
                });
            }
        };
    }
]);
