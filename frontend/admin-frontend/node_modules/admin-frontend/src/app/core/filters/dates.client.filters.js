/* global moment, _ */
'use strict';

angular.module('core')
    .filter('asHours', function () {
        return function (duration) {
            return moment.duration(duration).asHours().toFixed(2);
        };
    })
    .filter('elapsedTime', function(){
        return function(date, format){
            if (!format) format = 'hh:mm';

            var duration = moment.duration(moment() - moment(date)),
                minutes = duration.minutes();

            if(minutes < 10) {
                minutes = '0' + minutes;
            }

            return format.replace('hh', duration.hours()).replace('mm', minutes).replace('ss', duration.seconds());
        };
    })
    .filter('dateTimezone', function(){
        return function(date, timezone, format){        //format parameter is expected as moment format or "short"/"shortDate"/"shortTime"
            date = moment(date);
            if(timezone) date.tz(timezone);
            if (!format) format = 'short';

            //from angular to moment format
            if (format === 'short') format = 'M/D/YY h:mm a';
            else if (format === 'shortDate') format = 'M/D/YY';
            else if (format === 'shortTime') format = 'h:mm a';

            return date.format(format);
        };
    })
    .filter('dateFromString', [function(){
        return function(string, format){

            if (!string) return;

            if (!format) format = 'HH:mm';

            return moment(string, format).toDate();
        };
    }])
;
