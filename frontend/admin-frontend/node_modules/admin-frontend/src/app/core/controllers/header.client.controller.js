(function(){
    'use strict';

    angular.module('core').controller('HeaderController', HeaderController);

    /** @ngInject **/
    function HeaderController ($scope, $rootScope, $window, $state, Menus, Search, Inbox, EmployeesShifts, Authentication, $location, OnlineReceptionists, Events, Employees) {

        var self = this;

        self.onlineUsers = [];
        self.activeReceptionists = [];
        self.myself = null;
        $scope.currentShift = null;
        $scope.isInShift = false;
        $scope.$state = $state;
        $scope.menu = null;
        $scope.authentication = Authentication;

        self.init = init;
        $scope.toggleShift = toggleShift;
        $scope.signout = logout;
        $scope.pauseInbox = pauseInbox;
        $scope.typeahead = search;
        $scope.typeaheadSelect = searchOnSelect;
        self.goToLastClosedTicket = goToLastClosedTicket;

        //////////////////////


        function toggleShift(isInShift) {
            if (isInShift) {
                //check in
                $scope.currentShift = EmployeesShifts.checkIn(function(){
                    $rootScope.employee.isInShift = true;
                    Events.emit('employee.checkedIn', $rootScope.employee, $scope.currentShift);
                });

            } else {
                //check out
                $scope.currentShift = EmployeesShifts.checkOut(function(){
                    $rootScope.employee.isInShift = false;
                    Events.emit('employee.checkedOut', $rootScope.employee, $scope.currentShift);
                });

            }
        }

        function logout() {
            Authentication.logout(function(){
                $rootScope.employee = null;
            });
        }

        function pauseInbox() {
            Inbox.pause(function(){
                $rootScope.employee.pausedInboxAt = new Date();
                $rootScope.employee.isInInbox = false;
                Events.emit('inbox.paused');
            });
        }

        function search(query) {
            return Search.query(query).then(function(response){
                return _(response.data)
                    .groupBy('group')
                    .map(function (g) {
                        g[0].firstInGroup = true;
                        return g;
                    })
                    .flatten()
                    .value();
            });
        }


        function searchOnSelect($item, $model, $label, $event){
            var location;

            if ($item.group === 'accounts') {
                location = $state.href('account.settings', {accountId: $item._id});
            } else if ($item.group === 'users'){
                location = $state.href('account.user', {accountId: $item.accountId, userId: $item._id});
            } else if ($item.group === 'integrations'){
                location = $state.href('account.integration', {accountId: $item.accountId, integrationId: $item._id});
            } else if ($item.group === 'contacts'){
                location = $state.href('account.contacts', {accountId: $item.accountId, contactId: $item._id});
            } else if ($item.group === 'reservations'){
                location = $state.href('reservations.reservation', {reservationId: $item._id});
            } else if ($item.group === 'listings'){
                location = $state.href('listing.settings', {listingId: $item._id});
            }

            if ($event.altKey){
                $location.path(location);
            } else {
                $window.open(location, '_blank');
            }
        }

        function init(){
            $scope.menu = Menus.getMenu('topbar');

            self.onlineUsers = OnlineReceptionists.all;
            self.onlineUsers.$watch(function(){
                self.activeReceptionists = _.filter(self.onlineUsers, {inShift:true});
            });

            if ($rootScope.employee){
                if ($rootScope.employee.$resolved){
                    self.myself = OnlineReceptionists.getSyncedMe($rootScope.employee._id);
                } else {
                    $rootScope.employee.$promise.then(function(){
                        self.myself = OnlineReceptionists.getSyncedMe($rootScope.employee._id);
                    });
                }
            }

            $scope.currentShift = EmployeesShifts.get();
        }

        function goToLastClosedTicket($event){
            Employees.myTickets({limit: 1}, function(tickets){
                if (tickets && tickets.results && tickets.results.length){

                    var location = $state.href('inbox.ticket', {ticketId: tickets.results[0]._id});

                    if ($event.altKey || $event.ctrlKey || $event.shiftKey){
                        $window.open(location, '_blank');
                    } else {
                        $location.path(location);
                    }
                }
            });
        }

    }

})();