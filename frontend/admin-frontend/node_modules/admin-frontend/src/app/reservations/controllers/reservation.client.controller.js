'use strict';

// Reservations controller
angular.module('reservations').controller('ReservationController', [
    '$scope',
    '$rootScope',
    '$stateParams',
    'Reservations',
    'Integrations',
    'notify',
    '$uibModal',
    'ConversationsModalsService',
    function($scope, $rootScope, $stateParams, Reservations, Integrations, notify, $uibModal, ConversationsModalsService) {

        /**
         * initialize the reservation controller.
         * use the reservation from scope,
         * with fallback to provided reservationId and fallback to $stateParams.reservationId
         * @param [reservationId] {String}
         */
        $scope.init = function(reservationId) {
            // reservation already exists on scope
            if(!reservationId && $scope.reservation) {
                reservationId = $scope.reservation._id;
            }

            // reservationId not exists - so pull the reservationId from URL
            if(!reservationId) {
                reservationId = $stateParams.reservationId;
            }
            $scope.findOne(reservationId);
        };

        // Find existing Reservation
        $scope.findOne = function(reservationId) {
            $scope.reservation = Reservations.get({
                reservationId: reservationId
            }, function(reservation){

                if (_.has($scope.reservation, 'integration._id')){
                    $scope.reservation.integration.object = Integrations.get({integrationId: $scope.reservation.integration._id, fields: 'nickname'});
                }

                $scope.checkOutHasPassed = moment(reservation.checkOut) < new Date();

            }, function() {
                notify({message: 'Reservation was not found', classes: 'alert-danger'});
            });
        };

        // Update reservation resource and notify about it
        $scope.updateReservation = function(frm, fields) {
            Reservations.update({reservationId: $scope.reservation._id}, fields ? _.pick($scope.reservation, fields) : $scope.reservation, function() {
                notify({message: 'Reservation updated successfully', classes: 'alert-success'});
                // broadcast that reservation has changed
                $rootScope.$broadcast('reservation:updated', $scope.reservation);
                if (frm) frm.$setPristine();
            }, function() {
                notify({message: 'Reservation update failed', classes: 'alert-danger'});
                if (frm) frm.$setPristine();
            });
        };

        $scope.openLogModal = function(){
            var reservation = $scope.reservation;
            $uibModal.open({
                windowClass: 'reservation-log-modal',
                templateUrl: 'app/reservations/views/reservation/reservation-log-box.client.view.html',
                size: 'lg',
                controller: function($scope) {
                    $scope.reservation = reservation;
                }
            });
        };

        // open conversation thread with modal
        $scope.openConversationModal = function() {
            ConversationsModalsService.openConversationModal($scope.reservation.guestConversationId, $scope.reservation);
        };

        $scope.setValue = function(field, value, alsoSave){
            _.set($scope.reservation, field, value);
            if (alsoSave){
                $scope.updateReservation(null, field.split('.')[0]);
            }
        };
    }
]);
