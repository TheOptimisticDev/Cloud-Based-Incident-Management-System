'use strict';

// Reservations controller
angular.module('reservations').controller('ReservationCleaningAppointmentsController', [
    '$scope',
    'notify',
    'ReservationsCleaningAppointments',
    'Listing',
    'CommonService',
    'ReservationsModalService',
    '$rootScope',
    function($scope, notify, ReservationsCleaningAppointments, Listing, CommonService, ReservationsModalService, $rootScope) {

        /**
         * get the listing of this reservation
         */
        function getListing() {
            $scope.listing = Listing.get({
                listingId: $scope.reservation.listingId,
                fields:'title defaultCleaningTime'
            });
        }

        /**
         * get all cleaning for reservation
         */
        function getCleaningAppointments() {
            $scope.cleaningAppointmentsCollection = ReservationsCleaningAppointments.query({
                reservationId: $scope.reservation._id
            }, function() {
            }, function(err) {
                notify({message: err, class: 'alert-danger'});
            });
        }

        /**
         * subscribe for changes in appointments list (such as creating new appointment)
         */
        function subscribeToRelatedEvents() {
            $scope.$on('reservation:cleaning-appointments:updated', function(event, reservationId) {
                if($scope.reservation._id === reservationId)
                    getCleaningAppointments();
            });
        }

        /**
         * remove appointment from cleanings array
         * @param cleaningAppointment
         */
        function removeCleaningAppointmentFromList(cleaningAppointment) {
            $scope.cleaningAppointmentsCollection = _.filter($scope.cleaningAppointmentsCollection, function(appointment) {
                return appointment !== cleaningAppointment;
            });
        }

        /**
         * initialize data for scope
         */
        function init() {
            getCleaningAppointments();
            getListing();
            subscribeToRelatedEvents();
        }

        // should have a reservation at the scope
        if($scope.reservation) {
            init();
        } else {
            notify({message: 'Reservation was not found', classes: 'alert-danger'});
            return;
        }

        /**
         * opens a modal to create new cleaning
         */
        $scope.createCleaningAppointment = function(scheduleTime, value) {
            // define the hour and minutes like the last time cleaning for this listing
            if($scope.listing.defaultCleaningTime) {
                var lastTime = $scope.listing.defaultCleaningTime.split(':');
                scheduleTime = moment(scheduleTime)
                    .hour(lastTime[0])
                    .minute(lastTime[1])
                    .toDate();
            }
            var appointment = {scheduleTime: scheduleTime};

            if (value){
                var newAppointment = new ReservationsCleaningAppointments(appointment);
                newAppointment.reservationId = $scope.reservation._id;
                newAppointment.accountId = $scope.reservation.accountId;
                newAppointment.description = value;

                newAppointment.$save(function(response){
                    $scope.cleaningAppointmentsCollection.push(response);
                });
            } else {
                ReservationsModalService.openCleaningAppointmentModal($scope.reservation, null, appointment);
            }
        };

        /**
         * open a modal to edit chosen appointment
         * @param appointmentToUpdate
         */
        $scope.editCleaningAppointment = function (appointmentToUpdate) {
            ReservationsModalService.openCleaningAppointmentModal($scope.reservation, appointmentToUpdate);
        };

        /**
         * removes chosen appointment
         * @param cleaningAppointmentToDelete
         */
        $scope.deleteCleaningAppointment = function (cleaningAppointmentToDelete) {
            CommonService.confirm('Are you sure you want to delete this Cleaning Appointment?').then(function() {
                cleaningAppointmentToDelete.$delete({}, function () {
                    notify({message: 'Cleaning Appointment was deleted successfully', classes: 'alert-success'});
                    removeCleaningAppointmentFromList(cleaningAppointmentToDelete);
                    if(cleaningAppointmentToDelete.invoiceItemId) {
                        $rootScope.$broadcast('reservation:invoice-items:updated', $scope.reservation._id);
                    }
                }, function () {
                    notify({message: 'Cleaning Appointment could not be deleted', classes: 'alert-danger'});
                });
            });
        };
    }
]);
