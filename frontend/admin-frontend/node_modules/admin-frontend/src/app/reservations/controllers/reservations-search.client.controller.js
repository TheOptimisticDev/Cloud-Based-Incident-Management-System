'use strict';

// Reservations controller
angular.module('reservations').controller('ReservationsSearchController', [
    '$scope',
    '$state',
    '$stateParams',
    '$location',
    'Authentication',
    'Accounts',
    'Listing',
    'Guest',
    'Reservations',
    function($scope, $state, $stateParams, $location, Authentication, Accounts, Listing, Guest, Reservations) {
        $scope.accounts = Accounts;

        // Set global variables
        $scope.query = {
            fields: 'status confirmationCode guest checkIn checkOut postBooking'
        };
        $scope.defaultStatusClass = 'color1';
        $scope.currentPage = 1;
        $scope.totalCount = 0;

        // format dates for querystring parameterizing
        var formatDatesForQS = function(dateObject) {
            var output = '';

            // Add start date
            output += (dateObject.startDate) ? moment(dateObject.startDate).format('YYYY-MM-DD') : '';

            // Add end date
            output += ',' + ((dateObject.endDate) ? moment(dateObject.endDate).format('YYYY-MM-DD') : '');

            return (output === ',') ? '' : output;
        };

        // Find a list of Reservations
        $scope.find = function() {
            // Set pagination
            $scope.query.skip = ($scope.currentPage - 1) * 50;

            // Get all reservations matching the current query
            Reservations.query($scope.query, function(response) {
                $scope.reservations = response.reservations;
                $scope.totalCount = response.totalCount;
            });
        };

        // Search for accounts
        $scope.findAccounts = function(searchTerm) {
            return Accounts.query({
                q: searchTerm,
                fields: 'name',
                limit: 10
            }).$promise.then(function(response) {
                return response.accounts;
            });
        };

        $scope.findListings = function(searchTerm) {
            return Listing.query({
                q: searchTerm,
                accountId: $scope.query.accountId,
                fields: 'title nickname',
                limit: 10
            }).$promise.then(function(response) {
                return response.results;
            });
        };

        $scope.findGuests = function(searchTerm) {
            return Guest.query({
                q: searchTerm,
                accountId: $scope.query.accountId,
                fields: 'fullName',
                limit: 10
            }).$promise.then(function(response) {
                return response.results;
            });
        };

        // Fired when a specific account is selected
        $scope.specificAccountSelected = function($item) {
            $scope.query.accountId = $item._id;
        };

        $scope.specificListingSelected = function($item) {
            $scope.query.listingId = $item._id;
        };

        // Fired when a specific guest is selected
        $scope.specificGuestSelected = function($item) {
            $scope.query.guestId = $item._id;
        };

        // Initialize dates parameters
        $scope.initDatesParameters = function() {
            var datesParameters = _.pick($stateParams, ['checkIn', 'checkOut', 'confirmedAt', 'canceledAt']);

            // Loop through query dates
            _.forEach(datesParameters, function(item, key) {
                if (item) {
                    var itemDatesArray = item.split(',');
                    $scope.query[key] = {};

                    // If start date exists
                    if (itemDatesArray[0] && itemDatesArray[0].length > 0) {
                        $scope.query[key].startDate = itemDatesArray[0];
                    }
                    // If end date exists
                    if (itemDatesArray[1] && itemDatesArray[1].length > 0) {
                        $scope.query[key].endDate = itemDatesArray[1];
                    }
                }
            });
        };

        // Initialize guest parameters
        $scope.initGuestParameters = function() {
            if ($stateParams.guestId) {
                $scope.query.guestId = $stateParams.guestId;
              Guest.get({
                guestId: $scope.query.guestId,
                fields: 'fullName'
              }, function(guest) {
                $scope.query.guest = guest.fullName;
              });
            }
        };

        // Initialize account parameters
        $scope.initAccountParameters = function() {
            if ($stateParams.accountId || $stateParams.accountId) {
                $scope.accountId = $stateParams.accountId || $stateParams.accountId;
                $scope.query.accountId = $scope.accountId;

                // Get a user and its listings by the query string accountId parameter
                Accounts.get({
                    accountId: $scope.query.accountId,
                    fields: 'name'
                }, function(account) {
                    $scope.query.account = account.name;
                });
            }
        };

        // Initialize listing parameters
        $scope.initListingParameters = function() {
            if ($stateParams.listingId) {
                $scope.query.listingId = $stateParams.listingId;
            }
        };

        // thehe controller's initialization method
        $scope.init = function() {
            // Get dates state parameter from URL
            $scope.initDatesParameters();

            // Get account state parameter from URL
            $scope.initAccountParameters();

            // Get listing state parameter from URL
            $scope.initListingParameters();

            // Get guest state parameter from URL
            $scope.initGuestParameters();

            // Find reservations
            $scope.find();
        };

        // Find a list of Reservations
        $scope.search = function() {
            $scope.reservations = null;
            var searchParams = {};

            // Set checkIn parameters
            if ($scope.query.checkIn) {
                searchParams.checkIn = formatDatesForQS($scope.query.checkIn);
            }

            // Set checkOut parameters
            if ($scope.query.checkOut) {
                searchParams.checkOut = formatDatesForQS($scope.query.checkOut);
            }

            // Set canceledAt parameters
            if ($scope.query.canceledAt) {
                searchParams.canceledAt = formatDatesForQS($scope.query.canceledAt);
            }

            // Set confirmedAt parameters
            if ($scope.query.confirmedAt) {
                searchParams.confirmedAt = formatDatesForQS($scope.query.confirmedAt);
            }

            // Set accountId parameter from scope
            if ($scope.accountId) {
                searchParams.accountId = $scope.accountId;
            }

            // Set account
            if ($scope.query.accountId) {
                searchParams.accountId = $scope.query.accountId;

                if ($scope.query.listingId) {
                    searchParams.listingId = $scope.query.listingId;
                }

                if ($scope.query.guestId) {

                    if ($scope.query.guest) {
                        searchParams.guestId = $scope.query.guestId;
                    } else {
                      searchParams.guestId = '';
                    }

                }
            }


            _.each(searchParams, function(value, key) {
                if(value === null) searchParams[key] = '';
            });

            $state.go($state.current.name, searchParams, {reload: true});
        };

        //accordion
        $scope.toggleReservation = function(reservation) {
            reservation.isOpen = !reservation.isOpen;
        };


        //update the view //todo: refactor
        $scope.$on('reservation:updated', function(event, updatedReservation) {
            _.each($scope.reservations, function(reservation, index) {
                if (reservation._id === updatedReservation._id) {
                    _.extend(reservation, updatedReservation);
                }
            });
        });
    }
]);
