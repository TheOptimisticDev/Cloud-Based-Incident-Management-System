'use strict';

// Alter Reservation Modal controller for reservation
angular.module('reservations').controller('AlterReservationModalController', [
    '$scope',
    'Reservations',
    'notify',
    'formData',
    '$uibModalInstance',
    'Listing',
    'CommonService',
    function($scope, Reservations, notify, formData, $uibModalInstance, Listing, CommonService) {

        /**
         * initialize the modal
         */
        function init() {
            // fill the form with the predefined data form the modal-service, with fallback to the reservation data
            $scope.formData = {
                price: formData.price || formData.reservation.money.hostPayout,
                listingId: formData.listingId || formData.reservation.listingId,
                startDate: formData.startDate || formData.reservation.checkIn,
                endDate: formData.endDate || formData.reservation.checkOut,
                guests: formData.reservation.guestsCount
            };

            if ($scope.formData.listingId){
                $scope.formData.listing = Listing.get({listingId: $scope.formData.listingId, fields: '_id title address.full picture.thumbnail nickname'});
            }

            // create a list of range-options for the guests limitation (between 1-15)
            $scope.guestsOptions = _.range(1, 16); // array between 1-15
        }

        // reservation is needed to initialize the modal
        if (formData.reservation) {
            init();
        } else {
            formData.reservation = Reservations.get({
                reservationId: formData.reservationId,
                fields: 'accountId listingId checkIn checkOut guestsCount money.hostPayout'
            }, init);
        }

        /**
         * save the alter reservation for this reservation
         */
        $scope.save = function() {
            if($scope.disableBtns) return;

            CommonService.confirm().then(function() {
                $scope.disableBtns = true;
                $scope.isSavingAlter = true;

                if(!$scope.formData.listing) {
                    $scope.disableBtns = false;
                    return notify({message: 'Please choose listing', classes: 'alert-danger'});
                }
                if(!($scope.formData.startDate && $scope.formData.endDate)) {
                    $scope.disableBtns = false;
                    return notify({message: 'Please fill alter reservation date-range', classes: 'alert-danger'});
                }
                if(($scope.formData.endDate - $scope.formData.startDate) <= 0) {
                    $scope.disableBtns = false;
                    return notify({message: 'Please enter valid date-range', classes: 'alert-danger'});
                }
                if(!$scope.formData.price) {
                    $scope.disableBtns = false;
                    return notify({message: 'Please enter price', classes: 'alert-danger'});
                }

                $scope.formData.listingId = $scope.formData.listing._id;
                $scope.formData.startDate = moment($scope.formData.startDate).format('YYYY-MM-DD');
                $scope.formData.endDate = moment($scope.formData.endDate).format('YYYY-MM-DD');
                Reservations.setReservationAlterReservation({
                    reservationId: formData.reservationId
                }, $scope.formData, function() {
                    notify({message: 'Alter Reservation sent successfully', classes: 'alert-success'});
                    $uibModalInstance.close(true);
                }, function() {
                    notify({message: 'Could not save Alter Reservation', classes: 'alert-danger'});
                    $scope.disableBtns = false;
                    $scope.isSavingAlter = false;
                });
            });
        };

        /**
         * close this modal window
         */
        $scope.cancel = function() {
            $scope.disableBtns = true;
            $uibModalInstance.dismiss('cancel');
        };

        /**
         * check the suggested price for the form-data inserted
         * @returns {*}
         */
        $scope.checkAlterPrice = function checkAlterPrice(event) {
            event.preventDefault();
            
            // check if all data inserted before checking
            if(!($scope.formData.listing &&
                $scope.formData.startDate &&
                $scope.formData.endDate &&
                $scope.formData.guests)) {
                return notify({message: 'Please enter all necessary fields to check the suggested price', classes: 'alert-danger'});
            }

            $scope.disableBtns = true;
            $scope.isLoadingPrice = true;

            $scope.formData.listingId = $scope.formData.listing._id;
            $scope.formData.startDate = moment($scope.formData.startDate).format('YYYY-MM-DD');
            $scope.formData.endDate = moment($scope.formData.endDate).format('YYYY-MM-DD');

            Reservations.checkReservationAlterReservationPrice({
                reservationId: formData.reservationId
            }, $scope.formData, function(result) {
                $scope.disableBtns = false;
                $scope.isLoadingPrice = false;
                if(result.price) {
                    $scope.formData.price = result.price;
                } else {
                    notify({message: result.error, classes: 'alert-danger'});
                }
            }, function() {
                $scope.disableBtns = false;
                $scope.isLoadingPrice = false;
                notify({message: 'Could not load alter price', classes: 'alert-danger'});
            });
        };

        $scope.loadListings = function(q, ids){
            return Listing.query({
                accountId: formData.reservation.accountId,
                fields:'_id title address.full picture.thumbnail nickname',
                q: q,
                ids: ids,
                nids: ids ? null : _.get($scope, 'selectedListing._id'),
                limit: ids ? 100 : 10,
                pmsActive:true,
                sort: 'nickname title'
            }, function(listings){
                $scope.listings = listings.results;
            });
        };
    }
]);
