'use strict';

// Post bookings controller
angular.module('post-bookings').controller('PostBookingTicketsController', ['$scope', '$timeout', '$uibModal', 'Authentication', 'PostBookingTickets', 'SweetAlert',
    function($scope, $timeout, $uibModal, Authentication, PostBookingTickets, SweetAlert) {
        var timeouts = {};
        var employee = Authentication.getEmployee();

        $scope.tickets = PostBookingTickets.query();
        $scope.defaultStatusClass = 'color1';

        $scope.openReservationModal = function(reservationId) {
            if (!reservationId) return;
            $uibModal.open({
				windowClass: 'dashboard-reservation-modal modal-padded',
				templateUrl: 'app/reservations/views/reservation/reservation.client.view.html',
				size: 'lg',
				controller: function($scope) {
					$scope.reservationId = reservationId;
				}
			});
		};

        $scope.openReservationLogModal = function(reservationId) {
            if (!reservationId) return;
            $uibModal.open({
                windowClass: 'reservation-log-modal',
                templateUrl: 'app/reservations/views/reservation/reservation-log-box.client.view.html',
                size: 'lg',
                controller: function($scope) {
                    $scope.reservationId = reservationId;
                }
            });
        };

        $scope.view = function() {
            SweetAlert.swal(this.item.html);
        };

        $scope.label = function(item) {
            var labels = prompt('Enter label');
            if (labels) {
                item.labels = labels;
            } else {
                item.labels = null;
            }

            item.$save();
        };

        $scope.mark = function(item) {
            if (item.employee === employee.username) {
                item.employee = null;
            } else {
                item.employee = employee.username;
            }

            item.$save();
        };

        $scope.done = function(item) {
            item.deleted = employee.username;
            item.$save();

            timeouts[item.id] = $timeout(function() {
                item.$remove();

                for (var i in $scope.tickets ) {
					if ($scope.tickets [i] === item ) {
						$scope.tickets.splice(i, 1);
					}
				}

                delete timeouts[item.id];
            }, 4000);
        };

        $scope.undo = function(item) {
            if (timeouts[item.id]) {
                $timeout.cancel(timeouts[item.id]);
                delete timeouts[item.id];
            }

            item.deleted = null;
            item.$save();
        };

        $scope.isHookIssue = function(item) {
            return item.html.indexOf('Hook failed!') === 0;
        };
    }
]);
